"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Route_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Route"));
Route_1.default.get('/', async ({ auth, response }) => {
    let isLoggedin = await auth.check();
    if (isLoggedin) {
        return response.redirect().toPath("/dashboard");
    }
    else {
        return response.redirect().toPath("/login");
    }
});
Route_1.default.get('/login', 'Auth/LoginController.showLoginForm');
Route_1.default.post('/login', 'Auth/LoginController.login');
Route_1.default.get('/logout', 'Auth/AuthController.logout');
Route_1.default.get("/forgot-password", 'Auth/AuthController.forgot');
Route_1.default.post("/forgot-password", 'Auth/AuthController.createResetToken');
Route_1.default.get("/reset-password", 'Auth/AuthController.reset');
Route_1.default.post("/reset-password", 'Auth/AuthController.updatePasswordWithToken');
Route_1.default.group(() => {
    Route_1.default.get('/assignments/dashboard', 'DashboardController.index');
    Route_1.default.get('/plagiarism/checker', 'DashboardController.plagiarism');
    Route_1.default.post('/plagiarism/checker/upload', 'FileUploadController.upload');
    Route_1.default.get('/clients', 'ClientsController.index');
    Route_1.default.get('/clients/add', 'ClientsController.add');
    Route_1.default.post('/clients/add', 'ClientsController.store');
    Route_1.default.get('/devices', 'DevicesController.index');
    Route_1.default.get('/devices/add', 'DevicesController.add');
    Route_1.default.post('/devices/add', 'DevicesController.store');
}).middleware('auth:web');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBb0JBLG9GQUEwQztBQUUxQyxlQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRyxJQUFJLEVBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRTtJQUUxQyxJQUFJLFVBQVUsR0FBRSxNQUFNLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQTtJQUNsQyxJQUFHLFVBQVUsRUFBQztRQUNaLE9BQU8sUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQTtLQUNoRDtTQUNHO1FBQ0YsT0FBTyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0tBQzVDO0FBRUgsQ0FBQyxDQUFDLENBQUE7QUFHRixlQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxvQ0FBb0MsQ0FBQyxDQUFBO0FBQ3pELGVBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLDRCQUE0QixDQUFDLENBQUE7QUFDbEQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsNEJBQTRCLENBQUMsQ0FBQTtBQUVsRCxlQUFLLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFDLDRCQUE0QixDQUFDLENBQUE7QUFDMUQsZUFBSyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBQyxzQ0FBc0MsQ0FBQyxDQUFBO0FBQ3JFLGVBQUssQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUMsMkJBQTJCLENBQUMsQ0FBQTtBQUN4RCxlQUFLLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFDLDZDQUE2QyxDQUFDLENBQUE7QUFJM0UsZUFBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUU7SUFDZixlQUFLLENBQUMsR0FBRyxDQUFDLHdCQUF3QixFQUFDLDJCQUEyQixDQUFDLENBQUE7SUFFL0QsZUFBSyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsRUFBQyxnQ0FBZ0MsQ0FBQyxDQUFBO0lBQ2pFLGVBQUssQ0FBQyxJQUFJLENBQUMsNEJBQTRCLEVBQUUsNkJBQTZCLENBQUMsQ0FBQTtJQUV2RSxlQUFLLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBQyx5QkFBeUIsQ0FBQyxDQUFBO0lBQy9DLGVBQUssQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFDLHVCQUF1QixDQUFDLENBQUE7SUFDakQsZUFBSyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUMseUJBQXlCLENBQUMsQ0FBQTtJQUdwRCxlQUFLLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBQyx5QkFBeUIsQ0FBQyxDQUFBO0lBQy9DLGVBQUssQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFDLHVCQUF1QixDQUFDLENBQUE7SUFDakQsZUFBSyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUMseUJBQXlCLENBQUMsQ0FBQTtBQUd0RCxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG58IFJvdXRlc1xufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG58XG58IFRoaXMgZmlsZSBpcyBkZWRpY2F0ZWQgZm9yIGRlZmluaW5nIEhUVFAgcm91dGVzLiBBIHNpbmdsZSBmaWxlIGlzIGVub3VnaFxufCBmb3IgbWFqb3JpdHkgb2YgcHJvamVjdHMsIGhvd2V2ZXIgeW91IGNhbiBkZWZpbmUgcm91dGVzIGluIGRpZmZlcmVudFxufCBmaWxlcyBhbmQganVzdCBtYWtlIHN1cmUgdG8gaW1wb3J0IHRoZW0gaW5zaWRlIHRoaXMgZmlsZS4gRm9yIGV4YW1wbGVcbnxcbnwgRGVmaW5lIHJvdXRlcyBpbiBmb2xsb3dpbmcgdHdvIGZpbGVzXG58IOKUnOKUgOKUgCBzdGFydC9yb3V0ZXMvY2FydC50c1xufCDilJzilIDilIAgc3RhcnQvcm91dGVzL2N1c3RvbWVyLnRzXG58XG58IGFuZCB0aGVuIGltcG9ydCB0aGVtIGluc2lkZSBgc3RhcnQvcm91dGVzLnRzYCBhcyBmb2xsb3dzXG58XG58IGltcG9ydCAnLi9yb3V0ZXMvY2FydCdcbnwgaW1wb3J0ICcuL3JvdXRlcy9jdXN0b21lcicnXG58XG4qL1xuXG5pbXBvcnQgUm91dGUgZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9Sb3V0ZSdcblxuUm91dGUuZ2V0KCcvJywgYXN5bmMgKHsgIGF1dGgscmVzcG9uc2UgfSkgPT4ge1xuXG4gIGxldCBpc0xvZ2dlZGluID1hd2FpdCBhdXRoLmNoZWNrKClcbiAgaWYoaXNMb2dnZWRpbil7XG4gICAgcmV0dXJuIHJlc3BvbnNlLnJlZGlyZWN0KCkudG9QYXRoKFwiL2Rhc2hib2FyZFwiKVxuICB9XG4gIGVsc2V7XG4gICAgcmV0dXJuIHJlc3BvbnNlLnJlZGlyZWN0KCkudG9QYXRoKFwiL2xvZ2luXCIpXG4gIH1cblxufSlcblxuXG5Sb3V0ZS5nZXQoJy9sb2dpbicsICdBdXRoL0xvZ2luQ29udHJvbGxlci5zaG93TG9naW5Gb3JtJylcblJvdXRlLnBvc3QoJy9sb2dpbicsICdBdXRoL0xvZ2luQ29udHJvbGxlci5sb2dpbicpXG5Sb3V0ZS5nZXQoJy9sb2dvdXQnLCAnQXV0aC9BdXRoQ29udHJvbGxlci5sb2dvdXQnKVxuXG5Sb3V0ZS5nZXQoXCIvZm9yZ290LXBhc3N3b3JkXCIsJ0F1dGgvQXV0aENvbnRyb2xsZXIuZm9yZ290JylcblJvdXRlLnBvc3QoXCIvZm9yZ290LXBhc3N3b3JkXCIsJ0F1dGgvQXV0aENvbnRyb2xsZXIuY3JlYXRlUmVzZXRUb2tlbicpXG5Sb3V0ZS5nZXQoXCIvcmVzZXQtcGFzc3dvcmRcIiwnQXV0aC9BdXRoQ29udHJvbGxlci5yZXNldCcpXG5Sb3V0ZS5wb3N0KFwiL3Jlc2V0LXBhc3N3b3JkXCIsJ0F1dGgvQXV0aENvbnRyb2xsZXIudXBkYXRlUGFzc3dvcmRXaXRoVG9rZW4nKVxuXG5cblxuUm91dGUuZ3JvdXAoKCkgPT4ge1xuICBSb3V0ZS5nZXQoJy9hc3NpZ25tZW50cy9kYXNoYm9hcmQnLCdEYXNoYm9hcmRDb250cm9sbGVyLmluZGV4JylcblxuICBSb3V0ZS5nZXQoJy9wbGFnaWFyaXNtL2NoZWNrZXInLCdEYXNoYm9hcmRDb250cm9sbGVyLnBsYWdpYXJpc20nKVxuICBSb3V0ZS5wb3N0KCcvcGxhZ2lhcmlzbS9jaGVja2VyL3VwbG9hZCcsICdGaWxlVXBsb2FkQ29udHJvbGxlci51cGxvYWQnKVxuXG4gIFJvdXRlLmdldCgnL2NsaWVudHMnLCdDbGllbnRzQ29udHJvbGxlci5pbmRleCcpXG4gIFJvdXRlLmdldCgnL2NsaWVudHMvYWRkJywnQ2xpZW50c0NvbnRyb2xsZXIuYWRkJylcbiAgUm91dGUucG9zdCgnL2NsaWVudHMvYWRkJywnQ2xpZW50c0NvbnRyb2xsZXIuc3RvcmUnKVxuXG5cbiAgUm91dGUuZ2V0KCcvZGV2aWNlcycsJ0RldmljZXNDb250cm9sbGVyLmluZGV4JylcbiAgUm91dGUuZ2V0KCcvZGV2aWNlcy9hZGQnLCdEZXZpY2VzQ29udHJvbGxlci5hZGQnKVxuICBSb3V0ZS5wb3N0KCcvZGV2aWNlcy9hZGQnLCdEZXZpY2VzQ29udHJvbGxlci5zdG9yZScpXG5cblxufSkubWlkZGxld2FyZSgnYXV0aDp3ZWInKVxuIl19